
# --- Define top-level networks first ---
networks:
  app-network:
    driver: bridge

# --- Define top-level volumes ---
volumes:
  postgres_data:

# --- Define services ---
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: yourusername
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: time_management_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yourusername -d time_management_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: # Assign network to the service
      - app-network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks: # Assign network to the service
      - app-network

  app:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      # Ensure your DATABASE_URL is correctly set either here or in the .env file
      # Example if setting here:
      # - DATABASE_URL=postgresql+asyncpg://yourusername:yourpassword@db:5432/time_management_db
    networks: # Assign network to the service
      - app-network